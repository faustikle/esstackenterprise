input {
	file {
		path => "/opt/elastic/apache.log"
		tags => "apache"
		start_position => "beginning"
	}

	file {
		path => "/opt/elastic/mail.log"
		tags => "mail"
		start_position => "beginning"
	}

	beats {
		port => 5044
		tags => "beats"
	}
	
	# stdin { tags => "mail" }
}

filter {
	if "apache" in [tags] {
		grok {
			match => {"message" => ["%{COMBINEDAPACHELOG}","%{COMMONAPACHELOG}"] }
			tag_on_failure => "apache_error_parser"
		}
		
		date {
			match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}

		useragent {
			source => "agent"
		}
		geoip {
			source => "clientip"
		}

		mutate {
			convert => { "bytes" => "integer" }
			remove_field => ["message","path"]

		}

	}
	
	if "mail" in [tags] {
		if [message] =~ "postfix/smtpd" {
                        grok {
                                patterns_dir => ["/opt/elastic/logstash-7.5.1/config/patterns"]
                                match => { "message" => "%{POSTFIX_SMTPD}" }
                                tag_on_failure => "smtpd_error_parser"
                        }
			geoip {
				source => "postfix_client_ip"
			}	
                }
                if [message] =~ "postfix/cleanup" {
                        grok {
                                patterns_dir => ["/opt/elastic/logstash-7.5.1/config/patterns"]
                                match => { "message" => "%{POSTFIX_CLEANUP}" }
                                tag_on_failure => "smtpd_error_parser"
                        }
                }
		if [postfix_message-id] =~ ".com" {
			mutate {
				split => [ "postfix_message-id", "@" ]
				add_field => { "dominio" => "%{[postfix_message-id][1]}"}
			}
		}

		if [dominio] =~ ".com" {
			ruby {
				init => "require 'whois'"
				code => "
					whois = Whois::Client.new
					begin 
					  r = whois.lookup(event.get('dominio'))
					rescue
					  r = 'not whois'
					end
					event.set('who', r.to_s) 
				"
				tag_on_exception => ["ruby_parser_error"]
			}
		}		

	
	}
}

output {
	elasticsearch {
		hosts => ["10.10.10.10:9200","10.10.10.20:9200"]
		index => "logstash-%{+yyyy.MM.dd}"
		ssl => true
		ssl_certificate_verification => false
		cacert => "/opt/elastic/logstash-7.5.1/config/ca.pem"
		user => "elastic"
		password => "${espwd}"
	}
	
	# stdout {}

}


